const SERVER_URL = "http://localhost:5000";

async function serverAddTask(obj) {
  let response = await fetch(SERVER_URL + "/todos", {
    method: "POST",
    headers: { "Content-type": "application/json" },
    body: JSON.stringify(obj),
  });

  let data = await response.json();
  renderTask(data);
}

async function serverGetTask() {
  let response = await fetch(SERVER_URL + "/todos", {
    method: "GET",
  });
  let data = await response.json();
  renderTask(data);
}

async function serverDeleteAll() {
  let response = await fetch(SERVER_URL + "/todos", {
    method: "DELETE",
  });
  let data = await response.json();
  renderTask(data);
}

async function serverDeleteById(id) {
  let response = await fetch(SERVER_URL + `/todos/${id}`, {
    method: "DELETE",
  });
  let data = await response.json();
  renderTask(data);
}

async function serverGetChecked(id) {
  let response = await fetch(SERVER_URL + `/todos/${id}`, {
    method: "PATCH",
  });
  let data = await response.json();

  renderTask(data);
}

async function serverDeleteChecked() {
  let response = await fetch(SERVER_URL + "/checked", {
    method: "DELETE",
  });
  let data = await response.json();
  if (!data.length) {
    listContainer.style.display = "none";
    document.getElementById("button-wrapper").style.display = "none";
  }
  renderTask(data);
}

async function serverEditTask(id, value) {
  let response = await fetch(SERVER_URL + `/rewrite/${id}`, {
    method: "PATCH",
    body: value,
  });
  let data = await response.json();
  renderTask(data);
}

const form = document.getElementById("task-form"); //–ø–æ–ª—É—á–∏–ª–∏ —Ñ–æ—Ä–º—É
const listContainer = document.getElementById("list-container"); //–ø–æ–ª—É—á–∏–ª–∏ ul –∫—É–¥–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –∑–∞–¥–∞—á–∏

const deleteAllChecked = document.querySelector(".deleteAllChecked");
const deleteAll = document.querySelector(".deleteAll");

//–ø–æ–ª—É—á–∞–µ–º –∏–∑ –ª–æ–∫–∞–ª—Å—Ç–æ—Ä–∞–¥–∂ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ul –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
let taskCollector = localStorage.getItem("listContainer");
//—Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, –∫—É–¥–∞ –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –æ–±—ä–µ–∫—Ç—ã –∑–∞–¥–∞—á
let taskList = [];
//–µ—Å–ª–∏ –æ–±–ª–∞—Å—Ç—å –∑–∞–¥–∞—á–∏ –Ω–µ –ø—É—Å—Ç–∞—è, —Ç–æ –¥–µ–ª–∞–µ–º –∏–∑ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ª–æ–∫–∞–ª—Å—Ç–æ—Ä–∞–∂ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
if (taskCollector) taskList = JSON.parse(taskCollector);

//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∑–∞–¥–∞—á
function createNewTask(obj) {
  listContainer.style.display = "flex";
  document.getElementById("button-wrapper").style.display = "flex";

  //—Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–¥–∞—á–∏
  let itemTask = document.createElement("li");
  let itemTaskText = document.createElement("p");
  itemTaskText.textContent = obj.taskValue;
  itemTask.classList.add("item");
  itemTask.append(itemTaskText);
  if (obj.status) itemTaskText.classList.add("checked");

  //—Å–æ–∑–¥–∞–µ–º checkbox
  let taskCheck = document.createElement("input");
  taskCheck.setAttribute("type", "checkbox");
  taskCheck.classList.add("checkbox");
  itemTask.append(taskCheck);
  taskCheck.checked = obj.status;
  taskCheck.addEventListener("click", () => {
    itemTaskText.classList.toggle("checked"); //–¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å, —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ —Ç–µ–∫—Å—Ç –∑–∞—á–µ—Ä–∫–∏–≤–∞–ª—Å—è
    serverGetChecked(obj.id);
  });

  //—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
  let taskDeleteButton = document.createElement("button");
  taskDeleteButton.textContent = "üóëÔ∏è";
  taskDeleteButton.classList.add("deleteTask");
  itemTask.append(taskDeleteButton);
  taskDeleteButton.addEventListener("click", () => serverDeleteById(obj.id));

  //—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  let editButton = document.createElement("button");
  editButton.textContent = "‚úèÔ∏è";
  editButton.classList.add("editButton");
  itemTask.append(editButton);
  editButton.addEventListener("click", () => {
    editButton.textContent = "‚úÖ";
    if (!document.querySelector(".edit")) {
      let editInput = document.createElement("input");
      editInput.setAttribute("type", "text");
      itemTask.append(editInput);
      editInput.setAttribute("value", obj.taskValue);
      itemTaskText.remove();
      editInput.classList.add("edit");

      editInput.addEventListener("change", () => {
        let newTask = editInput.value;
        serverEditTask(obj.id, newTask);
      });
    } else {
      editInput.classList.remove("edit");
    }
  })


  return itemTask;
}

function renderTask(arr) {
  listContainer.innerHTML = "";
  arr.forEach((el) => {
    listContainer.append(createNewTask(el));
  });
}

serverGetTask();

deleteAllChecked.addEventListener("click", () => {
  serverDeleteChecked();
});

deleteAll.addEventListener("click", () => {
  listContainer.style.display = "none";
  document.getElementById("button-wrapper").style.display = "none";
  serverDeleteAll();
});



form.addEventListener("submit", (evt) => {
  evt.preventDefault(); //—É–±—Ä–∞–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Ñ–æ—Ä–º—É

  //—Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–¥–∞—á–∏
  let taskText = document.getElementById("inputTask").value;

  let taskObj = {
    taskValue: taskText,
    status: false,
  };


  serverAddTask(taskObj);

  //–ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ –ª–∏—Å—Ç –ø–æ–ª–µ –≤–≤–æ–¥–∞ –±—É–¥–µ—Ç –æ—á–∏—â–∞—Ç—å—Å—è
  document.getElementById("inputTask").value = "";
});
